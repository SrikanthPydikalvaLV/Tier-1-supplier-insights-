import os
import pandas as pd
from pdfminer.high_level import extract_text
import pytesseract
from pdf2image import convert_from_path

# Define paths
excel_file_path = 'C:/Users/yaswanth.p.lv/Documents/156 companies.xlsx'
pdf_folder_path = 'C:/Users/yaswanth.p.lv/Documents/MSV Web/downloaded2_reports/'
output_file_path = 'report_check_results1.xlsx'

# Read the Excel file containing the list of companies
companies_df = pd.read_excel(excel_file_path)

# Create an empty DataFrame to hold results
results_df = pd.DataFrame(columns=['Company', 'Report Present', 'Valid Report'])

# Initialize counters
found_count = 0
not_found_count = 0

# List of report type keywords
report_keywords = ['annual report', 'financial report', 'integrated report', 'proxy statement']

# Function to check if the company name, report type, and year (2023) are present in the PDF
def is_valid_report(file_path, company_name):
    try:
        # Attempt to extract text using pdfminer
        text = extract_text(file_path)
        if company_name.lower() in text.lower():
            # Check for report type keywords and the year '2023'
            if any(keyword in text.lower() for keyword in report_keywords) and '2023' in text:
                return True
        else:
            print(f"Using Tesseract OCR as fallback for: {file_path}")
            # Use Tesseract OCR if pdfminer fails or company name is not found
            images = convert_from_path(file_path)
            for image in images:
                text = pytesseract.image_to_string(image)
                if company_name.lower() in text.lower() and any(keyword in text.lower() for keyword in report_keywords) and '2023' in text:
                    return True
    except Exception as e:
        print(f"Error processing {file_path}: {e}")
    return False

# Loop through each company in the list
for company in companies_df['Company Name']:  # Update with your actual column name
    found_report = False
    valid_report = False
    for file_name in os.listdir(pdf_folder_path):
        # Check if the file name contains the company name and any of the valid report types
        if (company.lower() in file_name.lower() and
            any(report_type in file_name.lower() for report_type in report_keywords)
            and file_name.endswith('.pdf')):
           
            found_report = True
            # Check if the report is valid (contains the company name, report type, and "2023" inside the PDF)
            file_path = os.path.join(pdf_folder_path, file_name)
            valid_report = is_valid_report(file_path, company)
            break

    # Update counters
    if found_report:
        found_count += 1
    else:
        not_found_count += 1

    # Print status after each company check
    print(f"Company: {company}")
    print(f"Report Found: {found_report}")
    print(f"Valid Report (2023): {valid_report}")
    print(f"Total Found: {found_count}, Total Not Found: {not_found_count}")
    print("=" * 50)

    # Append results to the list
    results_list.append({'Company': company, 'Report Present': found_report, 'Valid Report': valid_report})

# Convert results list to DataFrame
results_df = pd.DataFrame(results_list)

# Save the results to an Excel file
results_df.to_excel(output_file_path, index=False)

print(f'Results have been saved to {output_file_path}')
